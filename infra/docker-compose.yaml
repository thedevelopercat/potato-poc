networks:
  potato:

volumes:
  loki:
  grafana:
  pgsql:
  app:

services:
  potato:
    image: "potato:latest"
    container_name: "potato_app"
    env_file:
      - ./env/potato/potato.env
      - ./env/potato/potato.override.env
    depends_on:
      - loki
      - promtail
      - traefik
    volumes:
      - ./data/potato/logs:/var/log/potato:rw
    networks:
      - potato

  traefik:
    image: "traefik:v3.2"
    container_name: "potato_traefik"
    ports:
      - "80:80"
    volumes:
      - ./config/traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./config/traefik/dynamic:/etc/traefik/dynamic:ro
    networks:
      - potato

  loki:
    image: grafana/loki:3.3.2
    container_name: "potato_loki"
    command: -config.file=/etc/loki/local-config.yaml
    user: root
    volumes:
      - ./config/loki/local-config.yaml:/etc/loki/local-config.yaml:ro
      - loki:/data
    networks:
      - potato

  promtail:
    image: grafana/promtail:2.9.2
    container_name: "potato_promtail"
    depends_on:
      - loki
    volumes:
      - ./data/potato/logs:/var/log/potato:ro
      - ./data/pgsql/logs:/var/log/pgsql:ro
      - ./config/promtail/config.yaml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - potato

  grafana:
    image: grafana/grafana:11.4.0
    container_name: "potato_grafana"
    depends_on:
      - loki
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - /run.sh
    volumes:
      - ./config/grafana/ds.yaml:/etc/grafana/provisioning/datasources/ds.yaml:ro
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - grafana:/var/lib/grafana
    networks:
      - potato

  postgres:
    image: postgres:17-alpine
    container_name: "potato_pgsql"
    labels:
      - docker-volume-backup.stop-during-backup=pgsql_database
    env_file:
      - ./env/pgsql/pgsql.env
      - ./env/pgsql/pgsql.override.env
    volumes:
      - pgsql:/var/lib/postgresql/data
      - ./data/pgsql/logs:/var/log/postgresql/
    networks:
      - potato
  
  backup:
    image: offen/docker-volume-backup:v2.43.0
    container_name: "potato_offen"
    restart: always
    env_file:
      - ./env/offen/offen.env
      - ./env/offen/offen.override.env
    volumes:
      # volumes to back up
      - pgsql:/backup/pgsql:ro
      - grafana:/backup/grafana:ro
      - loki:/backup/loki:ro
      - app:/backup/app:ro
      # configuration
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/offen/backup:/archive:rw
      - ./config/offen:/etc/dockervolumebackup/conf.d:ro
      # timezone
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - potato